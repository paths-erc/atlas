"use strict";var precacheConfig=[["/atlas/index.html","4bc28c8fc2d68700bbc8f16d3826a3ad"],["/atlas/static/css/main.0d893c81.css","566d850946a2ebe3fa9c7daa6a7073ed"],["/atlas/static/js/main.699a7c28.js","051fed8d5ec55a7d7fdb515c1d52f1d6"],["/atlas/static/media/9272-9275.ef53f386.jpg","ef53f386d2df750b8f2d98a375b4e773"],["/atlas/static/media/Antinoou.65b2feb2.ttf","65b2feb297cccfeb17edfedd338c3ebf"],["/atlas/static/media/AuthorsText.0dda6039.md","0dda603960ede0040286abe18fcb1c1f"],["/atlas/static/media/ColophonsText.03f87058.md","03f870586dbc5dcd2ce158f88e4b99ed"],["/atlas/static/media/IntroMd.867604cd.md","867604cd129abbca62c9e0f4e5a32568"],["/atlas/static/media/ManuscriptsText.e4f9bd51.md","e4f9bd51fc2f5630e8dd39d66f1d26c5"],["/atlas/static/media/MissionStatementMd.6b5abc54.md","6b5abc5472f76d07fe7ab3fa66fbbf5b"],["/atlas/static/media/PlacesText.ae39eadf.md","ae39eadf51886c991c4641f41048e6e9"],["/atlas/static/media/Ripple-1.7s-200px.7466db60.svg","7466db60fec8135aa348f46e1c2f6148"],["/atlas/static/media/TitlesText.df7e59d6.md","df7e59d6d9260c79c4196d2ee8d42471"],["/atlas/static/media/WorksText.c46da2c2.md","c46da2c2346cde89bbd72cc94709bcb2"],["/atlas/static/media/authors.c5d4185c.jpg","c5d4185c42f716d9a584159924577278"],["/atlas/static/media/erc.9fb24811.jpg","9fb248113a1f698d6d0ca08546f9d544"],["/atlas/static/media/lod.80612625.md","806126252ae653253511df5f8e102a31"],["/atlas/static/media/marea.1485b780.jpg","1485b7805f95f812901178afd680740b"],["/atlas/static/media/paths-logo.d0a2b412.png","d0a2b4128b0208eb7b7d453525eb30e5"],["/atlas/static/media/sapienza.b75f3d2c.jpg","b75f3d2cb77aa0551c4726aa0b5f34a1"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var s=new URL(e);return n&&s.pathname.match(n)||(s.search+=(s.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),s.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),s=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),s]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var s="/atlas/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(s,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});